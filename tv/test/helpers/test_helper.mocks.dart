// Mocks generated by Mockito 5.3.2 from annotations
// in tv/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;
import 'dart:convert' as _i27;
import 'dart:typed_data' as _i28;

import 'package:core/core.dart' as _i12;
import 'package:dartz/dartz.dart' as _i2;
import 'package:http/io_client.dart' as _i5;
import 'package:http/src/base_request.dart' as _i26;
import 'package:http/src/response.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:sqflite/sqflite.dart' as _i11;
import 'package:tv/data/model/tv_model/tv_detail_model.dart' as _i3;
import 'package:tv/data/model/tv_model/tv_model.dart' as _i16;
import 'package:tv/data/model/tv_model/tv_table.dart' as _i9;
import 'package:tv/datasources/db/tv_db/tv_database_helper.dart' as _i10;
import 'package:tv/datasources/tv_datasource/tv_local_data_source.dart' as _i7;
import 'package:tv/datasources/tv_datasource/tv_remote_data_source.dart'
    as _i15;
import 'package:tv/domain/entities/tv.dart' as _i14;
import 'package:tv/domain/entities/tv_detail.dart' as _i13;
import 'package:tv/domain/repositories/tv_repository.dart' as _i4;
import 'package:tv/domain/usecases/get_detail_tv.dart' as _i17;
import 'package:tv/domain/usecases/get_now_playing_tv.dart' as _i19;
import 'package:tv/domain/usecases/get_popular_tv.dart' as _i18;
import 'package:tv/domain/usecases/get_recomendations_tv.dart' as _i21;
import 'package:tv/domain/usecases/get_top_rate_tv.dart' as _i20;
import 'package:tv/domain/usecases/get_tv_watcha_list.dart' as _i22;
import 'package:tv/domain/usecases/get_watch_list_status_tv.dart' as _i23;
import 'package:tv/domain/usecases/remove_tv_watch_list.dart' as _i24;
import 'package:tv/domain/usecases/save_tv_watch_list.dart' as _i25;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDetailTvModelResponse_1 extends _i1.SmartFake
    implements _i3.DetailTvModelResponse {
  _FakeDetailTvModelResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTvRepository_2 extends _i1.SmartFake implements _i4.TvRepository {
  _FakeTvRepository_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIOStreamedResponse_3 extends _i1.SmartFake
    implements _i5.IOStreamedResponse {
  _FakeIOStreamedResponse_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_4 extends _i1.SmartFake implements _i6.Response {
  _FakeResponse_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TvLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvLocalDataSource extends _i1.Mock implements _i7.TvLocalDataSource {
  MockTvLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<String> insertWatchlistTv(_i9.TvTables? tv) => (super.noSuchMethod(
        Invocation.method(
          #insertWatchlistTv,
          [tv],
        ),
        returnValue: _i8.Future<String>.value(''),
      ) as _i8.Future<String>);
  @override
  _i8.Future<String> removeWatchlistTv(_i9.TvTables? tv) => (super.noSuchMethod(
        Invocation.method(
          #removeWatchlistTv,
          [tv],
        ),
        returnValue: _i8.Future<String>.value(''),
      ) as _i8.Future<String>);
  @override
  _i8.Future<_i9.TvTables?> getTvById(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getTvById,
          [id],
        ),
        returnValue: _i8.Future<_i9.TvTables?>.value(),
      ) as _i8.Future<_i9.TvTables?>);
  @override
  _i8.Future<List<_i9.TvTables>> getWatchlistTv() => (super.noSuchMethod(
        Invocation.method(
          #getWatchlistTv,
          [],
        ),
        returnValue: _i8.Future<List<_i9.TvTables>>.value(<_i9.TvTables>[]),
      ) as _i8.Future<List<_i9.TvTables>>);
}

/// A class which mocks [DatabaseHelperTv].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelperTv extends _i1.Mock implements _i10.DatabaseHelperTv {
  MockDatabaseHelperTv() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i11.Database?> get database => (super.noSuchMethod(
        Invocation.getter(#database),
        returnValue: _i8.Future<_i11.Database?>.value(),
      ) as _i8.Future<_i11.Database?>);
  @override
  _i8.Future<int> insertWatchlistTv(_i9.TvTables? tvTable) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertWatchlistTv,
          [tvTable],
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);
  @override
  _i8.Future<int> removeWatchList(_i9.TvTables? tvTable) => (super.noSuchMethod(
        Invocation.method(
          #removeWatchList,
          [tvTable],
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);
  @override
  _i8.Future<Map<String, dynamic>?> getTvById(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getTvById,
          [id],
        ),
        returnValue: _i8.Future<Map<String, dynamic>?>.value(),
      ) as _i8.Future<Map<String, dynamic>?>);
  @override
  _i8.Future<List<Map<String, dynamic>>> getWatchlistTv() =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchlistTv,
          [],
        ),
        returnValue: _i8.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i8.Future<List<Map<String, dynamic>>>);
}

/// A class which mocks [TvRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvRepository extends _i1.Mock implements _i4.TvRepository {
  MockTvRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i2.Either<_i12.Failure, _i13.TvDetail>> getDetailTv(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDetailTv,
          [id],
        ),
        returnValue: _i8.Future<_i2.Either<_i12.Failure, _i13.TvDetail>>.value(
            _FakeEither_0<_i12.Failure, _i13.TvDetail>(
          this,
          Invocation.method(
            #getDetailTv,
            [id],
          ),
        )),
      ) as _i8.Future<_i2.Either<_i12.Failure, _i13.TvDetail>>);
  @override
  _i8.Future<_i2.Either<_i12.Failure, List<_i14.Television>>> getOnTheAirTv() =>
      (super.noSuchMethod(
        Invocation.method(
          #getOnTheAirTv,
          [],
        ),
        returnValue:
            _i8.Future<_i2.Either<_i12.Failure, List<_i14.Television>>>.value(
                _FakeEither_0<_i12.Failure, List<_i14.Television>>(
          this,
          Invocation.method(
            #getOnTheAirTv,
            [],
          ),
        )),
      ) as _i8.Future<_i2.Either<_i12.Failure, List<_i14.Television>>>);
  @override
  _i8.Future<_i2.Either<_i12.Failure, List<_i14.Television>>> getTopRatedtv() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTopRatedtv,
          [],
        ),
        returnValue:
            _i8.Future<_i2.Either<_i12.Failure, List<_i14.Television>>>.value(
                _FakeEither_0<_i12.Failure, List<_i14.Television>>(
          this,
          Invocation.method(
            #getTopRatedtv,
            [],
          ),
        )),
      ) as _i8.Future<_i2.Either<_i12.Failure, List<_i14.Television>>>);
  @override
  _i8.Future<_i2.Either<_i12.Failure, List<_i14.Television>>> getPopularTv() =>
      (super.noSuchMethod(
        Invocation.method(
          #getPopularTv,
          [],
        ),
        returnValue:
            _i8.Future<_i2.Either<_i12.Failure, List<_i14.Television>>>.value(
                _FakeEither_0<_i12.Failure, List<_i14.Television>>(
          this,
          Invocation.method(
            #getPopularTv,
            [],
          ),
        )),
      ) as _i8.Future<_i2.Either<_i12.Failure, List<_i14.Television>>>);
  @override
  _i8.Future<_i2.Either<_i12.Failure, List<_i14.Television>>> Tvsearch(
          String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #Tvsearch,
          [query],
        ),
        returnValue:
            _i8.Future<_i2.Either<_i12.Failure, List<_i14.Television>>>.value(
                _FakeEither_0<_i12.Failure, List<_i14.Television>>(
          this,
          Invocation.method(
            #Tvsearch,
            [query],
          ),
        )),
      ) as _i8.Future<_i2.Either<_i12.Failure, List<_i14.Television>>>);
  @override
  _i8.Future<
      _i2.Either<_i12.Failure, List<_i14.Television>>> getTvRecommendations(
          int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvRecommendations,
          [id],
        ),
        returnValue:
            _i8.Future<_i2.Either<_i12.Failure, List<_i14.Television>>>.value(
                _FakeEither_0<_i12.Failure, List<_i14.Television>>(
          this,
          Invocation.method(
            #getTvRecommendations,
            [id],
          ),
        )),
      ) as _i8.Future<_i2.Either<_i12.Failure, List<_i14.Television>>>);
  @override
  _i8.Future<_i2.Either<_i12.Failure, String>> saveTvWatchlist(
          _i13.TvDetail? tvDetail) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveTvWatchlist,
          [tvDetail],
        ),
        returnValue: _i8.Future<_i2.Either<_i12.Failure, String>>.value(
            _FakeEither_0<_i12.Failure, String>(
          this,
          Invocation.method(
            #saveTvWatchlist,
            [tvDetail],
          ),
        )),
      ) as _i8.Future<_i2.Either<_i12.Failure, String>>);
  @override
  _i8.Future<_i2.Either<_i12.Failure, String>> removeTvWatchlist(
          _i13.TvDetail? tvDetail) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeTvWatchlist,
          [tvDetail],
        ),
        returnValue: _i8.Future<_i2.Either<_i12.Failure, String>>.value(
            _FakeEither_0<_i12.Failure, String>(
          this,
          Invocation.method(
            #removeTvWatchlist,
            [tvDetail],
          ),
        )),
      ) as _i8.Future<_i2.Either<_i12.Failure, String>>);
  @override
  _i8.Future<bool> isAddedToTvWatchlist(int? id) => (super.noSuchMethod(
        Invocation.method(
          #isAddedToTvWatchlist,
          [id],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);
  @override
  _i8.Future<
      _i2
          .Either<_i12.Failure, List<_i14.Television>>> getTvWatchlist() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvWatchlist,
          [],
        ),
        returnValue:
            _i8.Future<_i2.Either<_i12.Failure, List<_i14.Television>>>.value(
                _FakeEither_0<_i12.Failure, List<_i14.Television>>(
          this,
          Invocation.method(
            #getTvWatchlist,
            [],
          ),
        )),
      ) as _i8.Future<_i2.Either<_i12.Failure, List<_i14.Television>>>);
}

/// A class which mocks [TvRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvRemoteDataSource extends _i1.Mock
    implements _i15.TvRemoteDataSource {
  MockTvRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<List<_i16.ModelTv>> getTvPopular() => (super.noSuchMethod(
        Invocation.method(
          #getTvPopular,
          [],
        ),
        returnValue: _i8.Future<List<_i16.ModelTv>>.value(<_i16.ModelTv>[]),
      ) as _i8.Future<List<_i16.ModelTv>>);
  @override
  _i8.Future<List<_i16.ModelTv>> searchTv(String? query) => (super.noSuchMethod(
        Invocation.method(
          #searchTv,
          [query],
        ),
        returnValue: _i8.Future<List<_i16.ModelTv>>.value(<_i16.ModelTv>[]),
      ) as _i8.Future<List<_i16.ModelTv>>);
  @override
  _i8.Future<_i3.DetailTvModelResponse> getDetailTv(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDetailTv,
          [id],
        ),
        returnValue: _i8.Future<_i3.DetailTvModelResponse>.value(
            _FakeDetailTvModelResponse_1(
          this,
          Invocation.method(
            #getDetailTv,
            [id],
          ),
        )),
      ) as _i8.Future<_i3.DetailTvModelResponse>);
  @override
  _i8.Future<List<_i16.ModelTv>> getTvOnTheAir() => (super.noSuchMethod(
        Invocation.method(
          #getTvOnTheAir,
          [],
        ),
        returnValue: _i8.Future<List<_i16.ModelTv>>.value(<_i16.ModelTv>[]),
      ) as _i8.Future<List<_i16.ModelTv>>);
  @override
  _i8.Future<List<_i16.ModelTv>> getTvRecommendations(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvRecommendations,
          [id],
        ),
        returnValue: _i8.Future<List<_i16.ModelTv>>.value(<_i16.ModelTv>[]),
      ) as _i8.Future<List<_i16.ModelTv>>);
  @override
  _i8.Future<List<_i16.ModelTv>> getTvTopRated() => (super.noSuchMethod(
        Invocation.method(
          #getTvTopRated,
          [],
        ),
        returnValue: _i8.Future<List<_i16.ModelTv>>.value(<_i16.ModelTv>[]),
      ) as _i8.Future<List<_i16.ModelTv>>);
}

/// A class which mocks [GetDetailTv].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetDetailTv extends _i1.Mock implements _i17.GetDetailTv {
  MockGetDetailTv() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.TvRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTvRepository_2(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i4.TvRepository);
  @override
  _i8.Future<_i2.Either<_i12.Failure, _i13.TvDetail>> execute(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [id],
        ),
        returnValue: _i8.Future<_i2.Either<_i12.Failure, _i13.TvDetail>>.value(
            _FakeEither_0<_i12.Failure, _i13.TvDetail>(
          this,
          Invocation.method(
            #execute,
            [id],
          ),
        )),
      ) as _i8.Future<_i2.Either<_i12.Failure, _i13.TvDetail>>);
}

/// A class which mocks [GetPopularTv].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPopularTv extends _i1.Mock implements _i18.GetPopularTv {
  MockGetPopularTv() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.TvRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTvRepository_2(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i4.TvRepository);
  @override
  _i8.Future<_i2.Either<_i12.Failure, List<_i14.Television>>> execute() =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
        ),
        returnValue:
            _i8.Future<_i2.Either<_i12.Failure, List<_i14.Television>>>.value(
                _FakeEither_0<_i12.Failure, List<_i14.Television>>(
          this,
          Invocation.method(
            #execute,
            [],
          ),
        )),
      ) as _i8.Future<_i2.Either<_i12.Failure, List<_i14.Television>>>);
}

/// A class which mocks [GetNowPlayingTv].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetNowPlayingTv extends _i1.Mock implements _i19.GetNowPlayingTv {
  MockGetNowPlayingTv() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.TvRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTvRepository_2(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i4.TvRepository);
  @override
  _i8.Future<_i2.Either<_i12.Failure, List<_i14.Television>>> execute() =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
        ),
        returnValue:
            _i8.Future<_i2.Either<_i12.Failure, List<_i14.Television>>>.value(
                _FakeEither_0<_i12.Failure, List<_i14.Television>>(
          this,
          Invocation.method(
            #execute,
            [],
          ),
        )),
      ) as _i8.Future<_i2.Either<_i12.Failure, List<_i14.Television>>>);
}

/// A class which mocks [GetTopRatedTv].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTopRatedTv extends _i1.Mock implements _i20.GetTopRatedTv {
  MockGetTopRatedTv() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.TvRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTvRepository_2(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i4.TvRepository);
  @override
  _i8.Future<_i2.Either<_i12.Failure, List<_i14.Television>>> execute() =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
        ),
        returnValue:
            _i8.Future<_i2.Either<_i12.Failure, List<_i14.Television>>>.value(
                _FakeEither_0<_i12.Failure, List<_i14.Television>>(
          this,
          Invocation.method(
            #execute,
            [],
          ),
        )),
      ) as _i8.Future<_i2.Either<_i12.Failure, List<_i14.Television>>>);
}

/// A class which mocks [GetTvRecommendations].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvRecommendations extends _i1.Mock
    implements _i21.GetTvRecommendations {
  MockGetTvRecommendations() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.TvRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTvRepository_2(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i4.TvRepository);
  @override
  _i8.Future<_i2.Either<_i12.Failure, List<_i14.Television>>> execute(
          dynamic id) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [id],
        ),
        returnValue:
            _i8.Future<_i2.Either<_i12.Failure, List<_i14.Television>>>.value(
                _FakeEither_0<_i12.Failure, List<_i14.Television>>(
          this,
          Invocation.method(
            #execute,
            [id],
          ),
        )),
      ) as _i8.Future<_i2.Either<_i12.Failure, List<_i14.Television>>>);
}

/// A class which mocks [GetTvWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvWatchlist extends _i1.Mock implements _i22.GetTvWatchlist {
  MockGetTvWatchlist() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i2.Either<_i12.Failure, List<_i14.Television>>> execute() =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
        ),
        returnValue:
            _i8.Future<_i2.Either<_i12.Failure, List<_i14.Television>>>.value(
                _FakeEither_0<_i12.Failure, List<_i14.Television>>(
          this,
          Invocation.method(
            #execute,
            [],
          ),
        )),
      ) as _i8.Future<_i2.Either<_i12.Failure, List<_i14.Television>>>);
}

/// A class which mocks [GetTvWatchlistStatus].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvWatchlistStatus extends _i1.Mock
    implements _i23.GetTvWatchlistStatus {
  MockGetTvWatchlistStatus() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.TvRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTvRepository_2(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i4.TvRepository);
  @override
  _i8.Future<bool> execute(int? id) => (super.noSuchMethod(
        Invocation.method(
          #execute,
          [id],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);
}

/// A class which mocks [RemoveTvWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveTvWatchlist extends _i1.Mock implements _i24.RemoveTvWatchlist {
  MockRemoveTvWatchlist() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.TvRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTvRepository_2(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i4.TvRepository);
  @override
  _i8.Future<_i2.Either<_i12.Failure, String>> execute(
          _i13.TvDetail? tvDetail) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [tvDetail],
        ),
        returnValue: _i8.Future<_i2.Either<_i12.Failure, String>>.value(
            _FakeEither_0<_i12.Failure, String>(
          this,
          Invocation.method(
            #execute,
            [tvDetail],
          ),
        )),
      ) as _i8.Future<_i2.Either<_i12.Failure, String>>);
}

/// A class which mocks [SaveTvWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveTvWatchlist extends _i1.Mock implements _i25.SaveTvWatchlist {
  MockSaveTvWatchlist() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.TvRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTvRepository_2(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i4.TvRepository);
  @override
  _i8.Future<_i2.Either<_i12.Failure, String>> execute(
          _i13.TvDetail? tvDetail) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [tvDetail],
        ),
        returnValue: _i8.Future<_i2.Either<_i12.Failure, String>>.value(
            _FakeEither_0<_i12.Failure, String>(
          this,
          Invocation.method(
            #execute,
            [tvDetail],
          ),
        )),
      ) as _i8.Future<_i2.Either<_i12.Failure, String>>);
}

/// A class which mocks [IOClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i5.IOClient {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i5.IOStreamedResponse> send(_i26.BaseRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #send,
          [request],
        ),
        returnValue:
            _i8.Future<_i5.IOStreamedResponse>.value(_FakeIOStreamedResponse_3(
          this,
          Invocation.method(
            #send,
            [request],
          ),
        )),
      ) as _i8.Future<_i5.IOStreamedResponse>);
  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i8.Future<_i6.Response> head(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [url],
          {#headers: headers},
        ),
        returnValue: _i8.Future<_i6.Response>.value(_FakeResponse_4(
          this,
          Invocation.method(
            #head,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i8.Future<_i6.Response>);
  @override
  _i8.Future<_i6.Response> get(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#headers: headers},
        ),
        returnValue: _i8.Future<_i6.Response>.value(_FakeResponse_4(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i8.Future<_i6.Response>);
  @override
  _i8.Future<_i6.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i27.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i8.Future<_i6.Response>.value(_FakeResponse_4(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response>);
  @override
  _i8.Future<_i6.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i27.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i8.Future<_i6.Response>.value(_FakeResponse_4(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response>);
  @override
  _i8.Future<_i6.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i27.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i8.Future<_i6.Response>.value(_FakeResponse_4(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response>);
  @override
  _i8.Future<_i6.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i27.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i8.Future<_i6.Response>.value(_FakeResponse_4(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response>);
  @override
  _i8.Future<String> read(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [url],
          {#headers: headers},
        ),
        returnValue: _i8.Future<String>.value(''),
      ) as _i8.Future<String>);
  @override
  _i8.Future<_i28.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readBytes,
          [url],
          {#headers: headers},
        ),
        returnValue: _i8.Future<_i28.Uint8List>.value(_i28.Uint8List(0)),
      ) as _i8.Future<_i28.Uint8List>);
}
